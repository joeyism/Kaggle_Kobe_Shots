library(dplyr)
library(ggplot2)
data <- read.csv("data.csv", stringsAsFactor = FALSE)
names(data)
str(data)
train <- data[!is.na(data$shot_made_flag),]
test <- data[is.na(data$shot_made_flag),]
summary(train$shot_made_flag)
train$shot_made_flag <- as.factor(train$shot_made_flag)
str(train$shot_made_flag)
train$shot_made_flag <- factor(train$shot_made_flag, levels=c("1","0"))
factor(train$shot_made_flag, levels=c("1","0"))
factor
pplot <- function(feat){
feat <- substitute(feat)
pplot <- function(feat) {
    feat <- substitute(feat)
    ggplot(data = train, aes_q(x = feat)) +
        geom_bar(aes(fill = shot_made_flag), stat = "count", position = "fill") +
    scale_fill_brewer(palette = "Set1", direction = -1) +
     ggtitle(paste("accuracy by", feat))
}
courtplot <- function(feat) {
        feat <- substitute(feat)
    train %>% 
    ggplot(aes(x = lon, y = lat)) +
        geom_point(aes_q(color = feat), alpha = 0.7, size = 3) +
        ylim(c(33.7, 34.0883)) +
        scale_color_brewer(palette = "Set1") +
        theme_void() +
        ggtitle(paste(feat))
}
courtplot(combined_shot_type) 
aes
substitute
substitute(combined_shot_type)
train %>%
str(train$combined_shot_type)
summary(train$combined_shot_type)
factors(train$combined_shot_type)
factor(train$combined_shot_type)
q()
ggplot() +
    geom_point(data = filter(train, combined_shot_type == "Jump Shot"),
               aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
    geom_point(data = filter(train, combined_shot_type != "Jump Shot"),
                   aes(x = lon, y = lat, 
                       color = combined_shot_type), alpha = 0.7, size = 3) +
    ylim(c(33.7, 34.0883)) +
    scale_color_brewer(palette = "Set1") +
    theme_void() +
    ggtitle("Shot Types")
library(dplyr)
library(ggplot2)
ggplot() +
    geom_point(data = filter(train, combined_shot_type == "Jump Shot"),
               aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
    geom_point(data = filter(train, combined_shot_type != "Jump Shot"),
                   aes(x = lon, y = lat, 
                       color = combined_shot_type), alpha = 0.7, size = 3) +
    ylim(c(33.7, 34.0883)) +
    scale_color_brewer(palette = "Set1") +
    theme_void() +
    ggtitle("Shot Types")
ggplot() + geom <- point(data = filter(train, combined <- shot <- type == "Jump Shot"), aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) + geom <- point(data = filter(train, combined <- shot <- type != "Jump Shot"), aes(x = lon, y = lat, color = combined <- shot <- type), alpha = 0.7, size = 3) + ylim(c(33.7, 34.0883)) + scale <- color <- brewer(palette = "Set1") + theme <- void() + ggtitle("Shot Types")
ggplot() + geom <- point(data = filter(train, combined <- shot <- type == "Jump Shot"), aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) + geom <- point(data = filter(train, combined <- shot <- type != "Jump Shot"), aes(x = lon, y = lat, color = combined <- shot <- type), alpha = 0.7, size = 3) + ylim(c(33.7, 34.0883)) + scale <- color <- brewer(palette = "Set1") + theme <- void() + ggtitle("Shot Types")
ggplot() +
geom <- point(data = filter(train, combined <- shot <- type == "Jump Shot"),
aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
geom <- point(data = filter(train, combined <- shot <- type != "Jump Shot"),
aes(x = lon, y = lat, 
color = combined <- shot <- type), alpha = 0.7, size = 3) +
ylim(c(33.7, 34.0883)) +
scale <- color <- brewer(palette = "Set1") +
theme <- void() +
ggtitle("Shot Types")
ggplot() +
        geom <- point(data = filter(train, combined <- shot <- type == "Jump Shot"),
                                     aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
    geom <- point(data = filter(train, combined <- shot <- type != "Jump Shot"),
                                     aes(x = lon, y = lat, 
                                                                color = combined <- shot <- type), alpha = 0.7, size = 3) +
    ylim(c(33.7, 34.0883)) +
        scale <- color <- brewer(palette = "Set1") +
            theme <- void() +
                ggtitle("Shot Types")
ggplot() +
    geom_point(data = filter(train, combined_shot_type == "Jump Shot"),
               aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
    geom_point(data = filter(train, combined_shot_type != "Jump Shot"),
                   aes(x = lon, y = lat, 
                       color = combined_shot_type), alpha = 0.7, size = 3) +
    ylim(c(33.7, 34.0883)) +
    scale_color_brewer(palette = "Set1") +
    theme_void() +
    ggtitle("Shot Types")
ggplot() + geom_point(data = filter(train, combined_shot_type == "Jump Shot"), aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) + geom_point(data = filter(train, combined_shot_type != "Jump Shot"), aes(x = lon, y = lat, color = combined_shot_type), alpha = 0.7, size = 3) + ylim(c(33.7, 34.0883)) + scale_color_brewer(palette = "Set1") + theme_void() + ggtitle("Shot Types")
test
head(test)
head(test)
names(test)
names(test[-c("shot_made_flag"))
names(test[-c("shot_made_flag")])
names(test[-c("shot_made_flag"),])
names(test[,-c("shot_made_flag")])
names(test)
names(test[,-c(shot_made_flag)])
names(test[,!(names(test) %in% test)])
names(test[,!(names(test) %in% "shot_made_flag")])
source("script.R")
test
name(test)
names(test)
test[,-c("shot_made_flag")]
grep("shot_made_flag", colnames(test))
test[,-grep("shot_made_flag", colnames(test))]
names(test[,-grep("shot_made_flag", colnames(test))]~)
names(test[,-grep("shot_made_flag", colnames(test))])
source("script.R")
source("script.R")
source("script.R")
size
str(maxs)
maxs
maxs
source("script.R")
maxs
mins
factors(train$opponent)
factor(train$opponent)
as.numeric(train$opponent
as.numeric(train$opponent)
train$opponent[0]
as.character(train$opponent[0])
print(as.character(train$opponent[0]))
as.numeric(as.character(train$opponent[0]))
as.numeric(as.character(train$opponent))
lapply(train$opponent, function(x) as.numeric(as.character(x)))
as.character(train$opponent)
colnames(train)
c()
summary(train)
str(train)
source("script.R")
source("script.R")
train_without_shot
str(train_without_shot)
train$shot_type[0]

factor(train$shot_type)

substring(train$shot_type, 0, 1)
as.numeric(substring(train$shot_type, 0, 1))
source("script.R")
str(train)
as.factor(train$shot_made_flag)
str(train)
as.factor(as.numeric(train$shot_made_flag))
as.factor(as.numeric(train$shot_made_flag)-1)
train$shot_made_flag
factor(train$shot_made_flag, levels = c("0","2"))
factor(train$shot_made_flag, levels = c("0","1"))
train$shot_made_flag
factor(train$shot_made_flag, levels = c("0","1"))
source("script.R")
str(train)
factors(train$shot_zone_range)
rep(train$shot_zone_range, )
factors(train$shot_zone_range)
factor(train$shot_zone_range)
name(factor(train$shot_zone_range))
names(factor(train$shot_zone_range))
colnames(factor(train$shot_zone_range))
factor(train$shot_zone_range, levels=c("1"))
factor(train$shot_zone_range, labels=c("1"))
factor(train$shot_zone_range)
factor(train$shot_zone_range, labels=c("1", "2", "3"))
factor(train$shot_zone_range, labels=c("1", "2", "3", "4", "5"))
factor(train$shot_zone_range, labels=c("1"))
factor(train$shot_zone_range, labels=c("1", "2", "3", "4", "5"))
factor(train$shot_zone_range, labels=c("1", "2", "3", "4", "5"))
factor(train$shot_zone_range, labels=c("1"))
factor(train$shot_zone_range, labels=c("1", "2", "3", "4", "5"))
factor(train$shot_zone_range, labels=c("1", "2", "3", "4", "5"))
source('script.R')
train_without
source('script.R')
str(train_without)
source('script.R')
str(train_without)
factor(train_without$shot_zone_area)
source('script.R')
factor(train_without$shot_zone_area)
str(train_without)
source('script.R')
str(train_without)
str(train_without)
train_without$game_date
train_without$game_date[0]
head(train_without$game_date)
head(train_without$game_date,1)
substring(head(train_without$game_date,1),0,4)
substring(head(train_without$game_date,1),5,7)
substring(head(train_without$game_date,1),6,7)
substring(head(train_without$game_date,1),8,9)
substring(head(train_without$game_date,1),7,8)
substring(head(train_without$game_date,1),9,10)
source("script.R")
str(train_without)
source("script.R")
str(train_without)
str(train_without)
source("script.R")
str(train_without)
source("script.R")
source("script.R")
str(train_without)
source("script.R")
str(train_without)
source("script.R")
str(train_without)
source("script.R")
str(train_without)
factor(train$shot_zone_basic)
source("script.R")
str(train_without)
traceback
source("script.R")
traceback
traceback()
source("script.R")
traceback()
str(data)
nn <- neuralnet(f,train_without, hidden=c(10, 10, 10), linear.output=FALSE)
nn <- neuralnet(f, data, hidden=c(10, 10, 10), linear.output=FALSE)
f
source("script.R")
source("script.R")
source("script.R")
source("script.R")
traceback()
    maxs <- apply(data, 2, max)
    maxs <- apply(test, 2, max)
    mins <- apply(test, 2, min)
str(mins)
str(maxs)
colnames(mins)
names(mins)
names(test)
rows(test)
row(test)
row(mins)
maxs
mins
summary(test)
str(test)
source("script.R")
source("script.R")
q()
